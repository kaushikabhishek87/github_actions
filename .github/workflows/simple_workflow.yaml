name: Continuos Integration Workflow


on:
  workflow_dispatch:
  push:
    branches:
      - main
      
  # pull_request:
  #   types:
  #     - opened
  #   branches:
  #     - main
    # paths-ignore:
    #   - '.github/workflows/*'

env:
  THIS_IS_WORKFLOW_ENV: ${{ secrets.THIS_IS_WORKFLOW_ENV  }}

defaults:
  run: 
    shell: bash

jobs:
  test:
    name: Run unit tests
    environment: testing
    env:
      THIS_IS_JOB_ENV: ${{ secrets.THIS_IS_JOB_ENV }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: 'Checkout repository'
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

      - name: 'Install Dependencies'
        run: pip install -r requirements.txt

      # - name: 'Run Tests'
      #   run: pytest -vv

      - name: 'Run Tests with test report'
        id: run_tests
        run: pytest --json-report -vv

      - name: Upload test report
        if: failure() && steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: .report.json  

      - name: Accessing Env V1
        run: |
          echo 'THIS_IS_JOB_ENV V1 : $THIS_IS_JOB_ENV'
          
      
      - name: Accessing Env V2
        run: |
          echo "THIS_IS_JOB_ENV V2 : ${{ env.THIS_IS_JOB_ENV }}"

  lint:
    name: 'Run Linting'
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
    - uses: actions/checkout@v2
      name: 'Checkout repository'

    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

    - name: Install Dependencies
      run: pip install -r requirements.txt

    - name: Run Linting
      run: pylint ./simple_python/simple_python.py

    - name: Build package
      run: python setup.py sdist bdist_wheel

    - name: Publish Wheel file name
      id: publish
      run: find dist/*.whl -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: dist-files
        path: |
            dist 

  deploy:
    name: Deploy Job
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output Contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.lint.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying whatever"
      - name: Accessing job level Env
        run: |
          echo "THIS_IS_JOB_ENV : ${{ env.THIS_IS_JOB_ENV }}"
      
      - name: Accessing workflow level Env
        run: |
          echo "THIS_IS_WORKFLOW_ENV : $THIS_IS_WORKFLOW_ENV"
  

  


